plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.7.0'
    id 'org.jetbrains.intellij' version '1.9.0'
    id "org.jetbrains.grammarkit" version "2021.2.2"
    id 'org.jetbrains.changelog' version "1.3.1"
    id 'java'
}

group 'glsl.plugin'
version pluginVersion

repositories {
    mavenCentral()
}

compileJava {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
}

intellij {
//    version = 'IC-203.5981.155'
    version = 'IC-2022.2.1'
//    version = 'AI-221.6008.13.2211.8963757'
    updateSinceUntilBuild = true
}

runIde {
    buildSearchableOptions.enabled = false
    maxHeapSize = "4g"
}


generateParser {
    doFirst {
        delete 'src/main/gen/psi'
    }
    source = 'grammar/GlslGrammar.bnf'
    targetRoot = 'src/main/gen'
    pathToParser = '_GlslParser.java'
    pathToPsiRoot = 'psi'
}

generateLexer {
    dependsOn(generateParser)
    source = 'grammar/GlslLexer.flex'
    targetDir = 'src/main/gen/glsl'
    targetClass = '_GlslLexer.java'
}

task generateGrammarClean {
    doFirst {
        delete 'src/main/gen'
    }
    finalizedBy(generateParser)
    finalizedBy(generateLexer)
}

patchPluginXml {
    def descriptionHtml = file('plugin-info/description.html').text
    changeNotes = changelog.get(pluginVersion).toHTML()
    pluginDescription = descriptionHtml
    sinceBuild = '203.5'
    untilBuild = '223.*'
}

changelog {
    version = pluginVersion
}

publishPlugin {
    token = System.getenv('PUBLISH_TOKEN')
}

sourceSets {
    main {
        java.srcDirs 'src/main/gen'
    }
}